{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4","program":"/Users/jeziellago/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","buf_redux","/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=615c1761ea9c017f","-C","extra-filename=-615c1761ea9c017f","--out-dir","/Users/jeziellago/Documents/Github/rust-url-shortener/url-shortener/target/rls/debug/deps","-L","dependency=/Users/jeziellago/Documents/Github/rust-url-shortener/url-shortener/target/rls/debug/deps","--extern","memchr=/Users/jeziellago/Documents/Github/rust-url-shortener/url-shortener/target/rls/debug/deps/libmemchr-64e7bc025eb069ec.rmeta","--extern","safemem=/Users/jeziellago/Documents/Github/rust-url-shortener/url-shortener/target/rls/debug/deps/libsafemem-abd23765e2e80d99.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/jeziellago/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/jeziellago/Documents/Github/rust-url-shortener/url-shortener/target/rls/debug/deps/libbuf_redux-615c1761ea9c017f.rmeta"},"prelude":{"crate_id":{"name":"buf_redux","disambiguator":[16538528865027807784,15763060877670382867]},"crate_root":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src","external_crates":[{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[3356056412539282099,9451828457471230334]}},{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","num":17,"id":{"name":"safemem","disambiguator":[9703661828733287512,12544792130485217358]}}],"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":583,"byte_end":49015,"line_start":12,"line_end":1295,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":583,"byte_end":49015,"line_start":12,"line_end":1295,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":197},{"krate":0,"index":202},{"krate":0,"index":218},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":401},{"krate":0,"index":406},{"krate":0,"index":267},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":409},{"krate":0,"index":332},{"krate":0,"index":335}],"decl_id":null,"docs":" Drop-in replacements for buffered I/O types in `std::io`.","sig":null,"attributes":[{"value":"/ Drop-in replacements for buffered I/O types in `std::io`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":583,"byte_end":644,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":645,"byte_end":648,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ These replacements retain the method names/signatures and implemented traits of their stdlib","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":649,"byte_end":745,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ counterparts, making replacement as simple as swapping the import of the type:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":746,"byte_end":828,"line_start":15,"line_end":15,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":829,"byte_end":832,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #### `BufReader`:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":833,"byte_end":854,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/ ```notest","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":855,"byte_end":868,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ - use std::io::BufReader;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":869,"byte_end":898,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ + use buf_redux::BufReader;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":899,"byte_end":930,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":931,"byte_end":938,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ #### `BufWriter`:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":939,"byte_end":960,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/ ```notest","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":961,"byte_end":974,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ - use std::io::BufWriter;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":975,"byte_end":1004,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/ + use buf_redux::BufWriter;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1005,"byte_end":1036,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1037,"byte_end":1044,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ #### `LineWriter`:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1045,"byte_end":1067,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ ```notest","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1068,"byte_end":1081,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ - use std::io::LineWriter;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1082,"byte_end":1112,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ + use buf_redux::LineWriter;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1113,"byte_end":1145,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1146,"byte_end":1153,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1154,"byte_end":1157,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ### More Direct Control","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1158,"byte_end":1185,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/ All replacement types provide methods to:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1186,"byte_end":1231,"line_start":34,"line_end":34,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1232,"byte_end":1235,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ * Increase the capacity of the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1236,"byte_end":1277,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ * Get the number of available bytes as well as the total capacity of the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1278,"byte_end":1361,"line_start":37,"line_end":37,"column_start":1,"column_end":84}},{"value":"/ * Consume the wrapper without losing data","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1362,"byte_end":1407,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1408,"byte_end":1411,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `BufReader` provides methods to:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1412,"byte_end":1448,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1449,"byte_end":1452,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ * Access the buffer through an `&`-reference without performing I/O","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1453,"byte_end":1524,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ * Force unconditional reads into the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1525,"byte_end":1572,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/ * Get a `Read` adapter which empties the buffer and then pulls from the inner reader directly","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1573,"byte_end":1670,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ * Shuffle bytes down to the beginning of the buffer to make room for more reading","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1671,"byte_end":1756,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/ * Get inner reader and trimmed buffer with the remaining data","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1757,"byte_end":1822,"line_start":46,"line_end":46,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1823,"byte_end":1826,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ `BufWriter` and `LineWriter` provides methods to:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1827,"byte_end":1880,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1881,"byte_end":1884,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ * Flush the buffer and unwrap the inner writer unconditionally.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1885,"byte_end":1952,"line_start":50,"line_end":50,"column_start":1,"column_end":68}},{"value":"/ * Get the inner writer and trimmed buffer with the unflushed data.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":1953,"byte_end":2023,"line_start":51,"line_end":51,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2024,"byte_end":2027,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ### More Sensible and Customizable Buffering Behavior","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2028,"byte_end":2085,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/ Tune the behavior of the buffer to your specific use-case using the types in the","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2086,"byte_end":2170,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/ [`policy` module]:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2171,"byte_end":2193,"line_start":55,"line_end":55,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2194,"byte_end":2197,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ * Refine `BufReader`'s behavior by implementing the [`ReaderPolicy` trait] or use","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2198,"byte_end":2283,"line_start":57,"line_end":57,"column_start":1,"column_end":86}},{"value":"/ an existing implementation like [`MinBuffered`] to ensure the buffer always contains","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2284,"byte_end":2372,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/ a minimum number of bytes (until the underlying reader is empty).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2373,"byte_end":2442,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2443,"byte_end":2446,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ * Refine `BufWriter`'s behavior by implementing the [`WriterPolicy` trait]","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2447,"byte_end":2525,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ or use an existing implementation like [`FlushOn`] to flush when a particular byte","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2526,"byte_end":2612,"line_start":62,"line_end":62,"column_start":1,"column_end":87}},{"value":"/ appears in the buffer (used to implement [`LineWriter`]).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2613,"byte_end":2674,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2675,"byte_end":2678,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`policy` module]: policy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2679,"byte_end":2708,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"/ [`ReaderPolicy` trait]: policy::ReaderPolicy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2709,"byte_end":2757,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ [`MinBuffered`]: policy::MinBuffered","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2758,"byte_end":2798,"line_start":67,"line_end":67,"column_start":1,"column_end":41}},{"value":"/ [`WriterPolicy`]: policy::WriterPolicy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2799,"byte_end":2841,"line_start":68,"line_end":68,"column_start":1,"column_end":43}},{"value":"/ [`FlushOn`]: policy::FlushOn","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2842,"byte_end":2874,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ [`LineWriter`]: LineWriter","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2875,"byte_end":2905,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2906,"byte_end":2909,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### Making Room","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2910,"byte_end":2929,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/ The buffered types of this crate and their `std::io` counterparts, by default, use `Box<[u8]>`","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":2930,"byte_end":3028,"line_start":73,"line_end":73,"column_start":1,"column_end":99}},{"value":"/ as their buffer types ([`Buffer`](Buffer) is included as well since it is used internally","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3029,"byte_end":3122,"line_start":74,"line_end":74,"column_start":1,"column_end":94}},{"value":"/ by the other types in this crate).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3123,"byte_end":3161,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3162,"byte_end":3165,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ When one of these types inserts bytes into its buffer, via `BufRead::fill_buf()` (implicitly","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3166,"byte_end":3262,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/ called by `Read::read()`) in `BufReader`'s case or `Write::write()` in `BufWriter`'s case,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3263,"byte_end":3357,"line_start":78,"line_end":78,"column_start":1,"column_end":95}},{"value":"/ the entire buffer is provided to be read/written into and the number of bytes written is saved.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3358,"byte_end":3457,"line_start":79,"line_end":79,"column_start":1,"column_end":100}},{"value":"/ The read/written data then resides in the `[0 .. bytes_inserted]` slice of the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3458,"byte_end":3548,"line_start":80,"line_end":80,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3549,"byte_end":3552,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ When bytes are consumed from the buffer, via `BufRead::consume()` or `Write::flush()`,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3553,"byte_end":3643,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"/ the number of bytes consumed is added to the start of the slice such that the remaining","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3644,"byte_end":3735,"line_start":83,"line_end":83,"column_start":1,"column_end":92}},{"value":"/ data resides in the `[bytes_consumed .. bytes_inserted]` slice of the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3736,"byte_end":3817,"line_start":84,"line_end":84,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3818,"byte_end":3821,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The `std::io` buffered types, and their counterparts in this crate with their default policies,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3822,"byte_end":3921,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ don't have to deal with partially filled buffers as `BufReader` only reads when empty and","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":3922,"byte_end":4015,"line_start":87,"line_end":87,"column_start":1,"column_end":94}},{"value":"/ `BufWriter` only flushes when full.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4016,"byte_end":4055,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4056,"byte_end":4059,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ However, because the replacements in this crate are capable of reading on-demand and flushing","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4060,"byte_end":4157,"line_start":90,"line_end":90,"column_start":1,"column_end":98}},{"value":"/ less than a full buffer, they can run out of room in their buffers to read/write data into even","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4158,"byte_end":4257,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ though there is technically free space, because this free space is at the head of the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4258,"byte_end":4354,"line_start":92,"line_end":92,"column_start":1,"column_end":97}},{"value":"/ where reading into it would cause the data in the buffer to become non-contiguous.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4355,"byte_end":4441,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4442,"byte_end":4445,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This isn't technically a problem as the buffer could operate like `VecDeque` in `std` and return","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4446,"byte_end":4546,"line_start":95,"line_end":95,"column_start":1,"column_end":101}},{"value":"/ both slices at once, but this would not fit all use-cases: the `Read::fill_buf()` interface only","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4547,"byte_end":4647,"line_start":96,"line_end":96,"column_start":1,"column_end":101}},{"value":"/ allows one slice to be returned at a time so the older data would need to be completely consumed","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4648,"byte_end":4748,"line_start":97,"line_end":97,"column_start":1,"column_end":101}},{"value":"/ before the newer data can be returned; `BufWriter` could support it as the `Write` interface","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4749,"byte_end":4845,"line_start":98,"line_end":98,"column_start":1,"column_end":97}},{"value":"/ doesn't make an opinion on how the buffer works, but because the data would be non-contiguous","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4846,"byte_end":4943,"line_start":99,"line_end":99,"column_start":1,"column_end":98}},{"value":"/ it would require two flushes to get it all, which could degrade performance.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":4944,"byte_end":5024,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5025,"byte_end":5028,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The obvious solution, then, is to move the existing data down to the beginning of the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5029,"byte_end":5125,"line_start":102,"line_end":102,"column_start":1,"column_end":97}},{"value":"/ when there is no more room at the end so that more reads/writes into the buffer can be issued.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5126,"byte_end":5224,"line_start":103,"line_end":103,"column_start":1,"column_end":99}},{"value":"/ This works, and may suit some use-cases where the amount of data left is small and thus copying","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5225,"byte_end":5324,"line_start":104,"line_end":104,"column_start":1,"column_end":100}},{"value":"/ it would be inexpensive, but it is non-optimal. However, this option is provided","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5325,"byte_end":5409,"line_start":105,"line_end":105,"column_start":1,"column_end":85}},{"value":"/ as the `.make_room()` methods, and is utilized by [`policy::MinBuffered`](policy::MinBuffered)","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5410,"byte_end":5508,"line_start":106,"line_end":106,"column_start":1,"column_end":99}},{"value":"/ and [`policy::FlushExact`](policy::FlushExact).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5509,"byte_end":5560,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5561,"byte_end":5564,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ### Ringbuffers / `slice-deque` Feature","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5565,"byte_end":5608,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ Instead of moving data, however, it is also possible to use virtual-memory tricks to","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5609,"byte_end":5697,"line_start":110,"line_end":110,"column_start":1,"column_end":89}},{"value":"/ allocate a ringbuffer that loops around on itself in memory and thus is always contiguous,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5698,"byte_end":5792,"line_start":111,"line_end":111,"column_start":1,"column_end":95}},{"value":"/ as described in [the Wikipedia article on Ringbuffers][ringbuf-wikipedia].","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5793,"byte_end":5871,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5872,"byte_end":5875,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This is the exact trick used by [the `slice-deque` crate](https://crates.io/crates/slice-deque),","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5876,"byte_end":5976,"line_start":114,"line_end":114,"column_start":1,"column_end":101}},{"value":"/ which is now provided as an optional feature `slice-deque` exposed via the","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":5977,"byte_end":6055,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ `new_ringbuf()` and `with_capacity_ringbuf()` constructors added to the buffered types here.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6056,"byte_end":6152,"line_start":116,"line_end":116,"column_start":1,"column_end":97}},{"value":"/ When a buffered type is constructed using one of these functions, `.make_room()` is turned into","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6153,"byte_end":6252,"line_start":117,"line_end":117,"column_start":1,"column_end":100}},{"value":"/ a no-op as consuming bytes from the head of the buffer simultaneously makes room at the tail.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6253,"byte_end":6350,"line_start":118,"line_end":118,"column_start":1,"column_end":98}},{"value":"/ However, this has some caveats:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6351,"byte_end":6386,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6387,"byte_end":6390,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ * It is only available on target platforms with virtual memory support, namely fully fledged","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6391,"byte_end":6487,"line_start":121,"line_end":121,"column_start":1,"column_end":97}},{"value":"/ OSes such as Windows and Unix-derivative platforms like Linux, OS X, BSD variants, etc.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6488,"byte_end":6579,"line_start":122,"line_end":122,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6580,"byte_end":6583,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ * The default capacity varies based on platform, and custom capacities are rounded up to a","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6584,"byte_end":6678,"line_start":124,"line_end":124,"column_start":1,"column_end":95}},{"value":"/ multiple of their minimum size, typically the page size of the platform.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6679,"byte_end":6755,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/ Windows' minimum size is comparably quite large (**64 KiB**) due to some legacy reasons,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6756,"byte_end":6848,"line_start":126,"line_end":126,"column_start":1,"column_end":93}},{"value":"/ so this may be less optimal than the default capacity for a normal buffer (8 KiB) for some","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6849,"byte_end":6943,"line_start":127,"line_end":127,"column_start":1,"column_end":95}},{"value":"/ use-cases.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6944,"byte_end":6958,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6959,"byte_end":6962,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ * Due to the nature of the virtual-memory trick, the virtual address space the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":6963,"byte_end":7052,"line_start":130,"line_end":130,"column_start":1,"column_end":90}},{"value":"/ allocates will be double its capacity. This means that your program will *appear* to use more","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":7053,"byte_end":7150,"line_start":131,"line_end":131,"column_start":1,"column_end":98}},{"value":"/ memory than it would if it was using a normal buffer of the same capacity. The physical memory","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":7151,"byte_end":7249,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ usage will be the same in both cases, but if address space is at a premium in your application","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":7250,"byte_end":7348,"line_start":133,"line_end":133,"column_start":1,"column_end":99}},{"value":"/ (32-bit targets) then this may be a concern.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":7349,"byte_end":7397,"line_start":134,"line_end":134,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":7398,"byte_end":7401,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ [ringbuf-wikipedia]: https://en.wikipedia.org/wiki/Circular_buffer#Optimization","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":7402,"byte_end":7485,"line_start":136,"line_end":136,"column_start":1,"column_end":84}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":7486,"byte_end":7508,"line_start":137,"line_end":137,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":90},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"policy","qualname":"::policy","value":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":347},{"krate":0,"index":354},{"krate":0,"index":352},{"krate":0,"index":350},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":357},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":366},{"krate":0,"index":373},{"krate":0,"index":371},{"krate":0,"index":369},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":374},{"krate":0,"index":379},{"krate":0,"index":377},{"krate":0,"index":108},{"krate":0,"index":381},{"krate":0,"index":386},{"krate":0,"index":384},{"krate":0,"index":111},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":391},{"krate":0,"index":114},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":397},{"krate":0,"index":117},{"krate":0,"index":120}],"decl_id":null,"docs":" Types which can be used to tune the behavior of `BufReader` and `BufWriter`.","sig":null,"attributes":[{"value":"/ Types which can be used to tune the behavior of `BufReader` and `BufWriter`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":58699,"byte_end":58779,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":58780,"byte_end":58783,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Some simple policies are provided for your convenience. You may prefer to create your own","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":58784,"byte_end":58877,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ types and implement the traits for them instead.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":58878,"byte_end":58930,"line_start":11,"line_end":11,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59141,"byte_end":59147,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"DoRead","qualname":"::policy::DoRead","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flag for `ReaderPolicy` methods to signal whether or not `BufReader` should read into\n the buffer.","sig":null,"attributes":[{"value":"/ Flag for `ReaderPolicy` methods to signal whether or not `BufReader` should read into","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":58952,"byte_end":59041,"line_start":15,"line_end":15,"column_start":1,"column_end":90}},{"value":"/ the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59042,"byte_end":59057,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59058,"byte_end":59061,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See `do_read!()` for a shorthand.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59062,"byte_end":59099,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":349},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59148,"byte_end":59156,"line_start":20,"line_end":20,"column_start":19,"column_end":27},"name":"0","qualname":"::policy::DoRead::0","value":"bool","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59724,"byte_end":59733,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"StdPolicy","qualname":"::policy::StdPolicy","value":"","parent":null,"children":[],"decl_id":null,"docs":" Default policy for both `BufReader` and `BufWriter` that reproduces the behaviors of their\n `std::io` counterparts:","sig":null,"attributes":[{"value":"/ Default policy for both `BufReader` and `BufWriter` that reproduces the behaviors of their","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59378,"byte_end":59472,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/ `std::io` counterparts:","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59473,"byte_end":59500,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59501,"byte_end":59504,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ * `BufReader`: only reads when the buffer is empty, does not resize or move data.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59505,"byte_end":59590,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ * `BufWriter`: only flushes the buffer when there is not enough room for an incoming write.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59591,"byte_end":59686,"line_start":33,"line_end":33,"column_start":1,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":95},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59793,"byte_end":59805,"line_start":38,"line_end":38,"column_start":11,"column_end":23},"name":"ReaderPolicy","qualname":"::policy::ReaderPolicy","value":"ReaderPolicy","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":" Trait that governs `BufReader`'s behavior.\n","sig":null,"attributes":[{"value":"/ Trait that governs `BufReader`'s behavior.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59736,"byte_end":59782,"line_start":37,"line_end":37,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60961,"byte_end":60972,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"before_read","qualname":"::policy::ReaderPolicy::before_read","value":"pub fn before_read(&mut Self, &mut Buffer) -> DoRead","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Consulted before attempting to read into the buffer.","sig":null,"attributes":[{"value":"/ Consulted before attempting to read into the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59812,"byte_end":59868,"line_start":39,"line_end":39,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59873,"byte_end":59876,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Return `DoRead(true)` to issue a read into the buffer before reading data out of it,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59881,"byte_end":59969,"line_start":41,"line_end":41,"column_start":5,"column_end":93}},{"value":"/ or `DoRead(false)` to read from the buffer as it is, even if it's empty.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":59974,"byte_end":60050,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ `do_read!()` is provided as a shorthand.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60055,"byte_end":60099,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60104,"byte_end":60107,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If there is no room in the buffer after this method is called,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60112,"byte_end":60178,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/ the buffer will not be read into (so if the buffer is full but you want more data","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60183,"byte_end":60268,"line_start":46,"line_end":46,"column_start":5,"column_end":90}},{"value":"/ you should call `.make_room()` or reserve more space). If there *is* room, `BufReader` will","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60273,"byte_end":60368,"line_start":47,"line_end":47,"column_start":5,"column_end":100}},{"value":"/ attempt to read into the buffer. If successful (`Ok(x)` where `x > 0` is returned), this","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60373,"byte_end":60465,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ method will be consulted again for another read attempt.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60470,"byte_end":60530,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60535,"byte_end":60538,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ By default, this implements `std::io::BufReader`'s behavior: only read into the buffer if","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60543,"byte_end":60636,"line_start":51,"line_end":51,"column_start":5,"column_end":98}},{"value":"/ it is empty.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60641,"byte_end":60657,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60662,"byte_end":60665,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60670,"byte_end":60682,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ If the read will ignore the buffer entirely (if the buffer is empty and the amount to be","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60687,"byte_end":60779,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ read matches or exceeds its capacity) or if `BufReader::read_into_buf()` was called to force","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60784,"byte_end":60880,"line_start":56,"line_end":56,"column_start":5,"column_end":101}},{"value":"/ a read into the buffer manually, this method will not be called.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":60885,"byte_end":60953,"line_start":57,"line_end":57,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61272,"byte_end":61285,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"after_consume","qualname":"::policy::ReaderPolicy::after_consume","value":"pub fn after_consume(&mut Self, &mut Buffer, usize)","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Called after bytes are consumed from the buffer.","sig":null,"attributes":[{"value":"/ Called after bytes are consumed from the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61050,"byte_end":61102,"line_start":60,"line_end":60,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61107,"byte_end":61110,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Supplies the true amount consumed if the amount passed to `BufReader::consume`","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61115,"byte_end":61197,"line_start":62,"line_end":62,"column_start":5,"column_end":87}},{"value":"/ was in excess.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61202,"byte_end":61220,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61225,"byte_end":61228,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This is a no-op by default.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61233,"byte_end":61264,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62822,"byte_end":62833,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"MinBuffered","qualname":"::policy::MinBuffered","value":"","parent":null,"children":[],"decl_id":null,"docs":" A policy for [`BufReader`](::BufReader) which ensures there is at least the given number of\n bytes in  the buffer, failing this only if the reader is at EOF.","sig":null,"attributes":[{"value":"/ A policy for [`BufReader`](::BufReader) which ensures there is at least the given number of","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61462,"byte_end":61557,"line_start":72,"line_end":72,"column_start":1,"column_end":96}},{"value":"/ bytes in  the buffer, failing this only if the reader is at EOF.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61558,"byte_end":61626,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61627,"byte_end":61630,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ If the minimum buffer length is greater than the buffer capacity, it will be resized.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61631,"byte_end":61720,"line_start":75,"line_end":75,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61721,"byte_end":61724,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61725,"byte_end":61740,"line_start":77,"line_end":77,"column_start":1,"column_end":16}},{"value":"/ ```rust","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61741,"byte_end":61752,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/ use buf_redux::BufReader;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61753,"byte_end":61782,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/ use buf_redux::policy::MinBuffered;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61783,"byte_end":61822,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ use std::io::{BufRead, Cursor};","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61823,"byte_end":61858,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"/ ","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61859,"byte_end":61863,"line_start":82,"line_end":82,"column_start":1,"column_end":5}},{"value":"/ let data = (1 .. 16).collect::<Vec<u8>>();","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61864,"byte_end":61910,"line_start":83,"line_end":83,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61911,"byte_end":61914,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ // normally you should use `BufReader::new()` or give a capacity of several KiB or more","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61915,"byte_end":62006,"line_start":85,"line_end":85,"column_start":1,"column_end":92}},{"value":"/ let mut reader = BufReader::with_capacity(8, Cursor::new(data))","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62007,"byte_end":62074,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/     // always at least 4 bytes in the buffer (or until the source is empty)","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62075,"byte_end":62154,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/     .set_policy(MinBuffered(4)); // always at least 4 bytes in the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62155,"byte_end":62232,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62233,"byte_end":62236,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // first buffer fill, same as `std::io::BufReader`","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62237,"byte_end":62291,"line_start":90,"line_end":90,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(reader.fill_buf().unwrap(), &[1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62292,"byte_end":62362,"line_start":91,"line_end":91,"column_start":1,"column_end":71}},{"value":"/ reader.consume(3);","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62363,"byte_end":62385,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62386,"byte_end":62389,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // enough data in the buffer, another read isn't done yet","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62390,"byte_end":62451,"line_start":94,"line_end":94,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(reader.fill_buf().unwrap(), &[4, 5, 6, 7, 8]);","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62452,"byte_end":62513,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/ reader.consume(4);","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62514,"byte_end":62536,"line_start":96,"line_end":96,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62537,"byte_end":62540,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // `std::io::BufReader` would return `&[8]`","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62541,"byte_end":62588,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(reader.fill_buf().unwrap(), &[8, 9, 10, 11, 12, 13, 14, 15]);","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62589,"byte_end":62665,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ reader.consume(5);","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62666,"byte_end":62688,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62689,"byte_end":62692,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // no data left in the reader","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62693,"byte_end":62726,"line_start":102,"line_end":102,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(reader.fill_buf().unwrap(), &[13, 14, 15]);","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62727,"byte_end":62785,"line_start":103,"line_end":103,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62786,"byte_end":62793,"line_start":104,"line_end":104,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":363},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62834,"byte_end":62843,"line_start":106,"line_end":106,"column_start":24,"column_end":33},"name":"0","qualname":"::policy::MinBuffered::0","value":"usize","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62938,"byte_end":62945,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"set_min","qualname":"<MinBuffered>::set_min","value":"pub fn set_min(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the number of bytes to ensure are in the buffer.\n","sig":null,"attributes":[{"value":"/ Set the number of bytes to ensure are in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62870,"byte_end":62926,"line_start":109,"line_end":109,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63731,"byte_end":63739,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"FlushAmt","qualname":"::policy::FlushAmt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flag for `WriterPolicy` methods to tell `BufWriter` how many bytes to flush to the\n underlying reader.","sig":null,"attributes":[{"value":"/ Flag for `WriterPolicy` methods to tell `BufWriter` how many bytes to flush to the","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63536,"byte_end":63622,"line_start":133,"line_end":133,"column_start":1,"column_end":87}},{"value":"/ underlying reader.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63623,"byte_end":63645,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63646,"byte_end":63649,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ See `flush_amt!()` for a shorthand.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63650,"byte_end":63689,"line_start":136,"line_end":136,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63740,"byte_end":63749,"line_start":138,"line_end":138,"column_start":21,"column_end":30},"name":"0","qualname":"::policy::FlushAmt::0","value":"usize","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64029,"byte_end":64041,"line_start":148,"line_end":148,"column_start":11,"column_end":23},"name":"WriterPolicy","qualname":"::policy::WriterPolicy","value":"WriterPolicy","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" A trait which tells `BufWriter` when to flush.\n","sig":null,"attributes":[{"value":"/ A trait which tells `BufWriter` when to flush.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63968,"byte_end":64018,"line_start":147,"line_end":147,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64498,"byte_end":64510,"line_start":157,"line_end":157,"column_start":8,"column_end":20},"name":"before_write","qualname":"::policy::WriterPolicy::before_write","value":"pub fn before_write(&mut Self, &mut Buffer, usize) -> FlushAmt","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Return `FlushAmt(n > 0)` if the buffer should be flushed before reading into it.\n If the returned amount is 0 or greater than the amount of buffered data, no flush is\n performed.","sig":null,"attributes":[{"value":"/ Return `FlushAmt(n > 0)` if the buffer should be flushed before reading into it.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64048,"byte_end":64132,"line_start":149,"line_end":149,"column_start":5,"column_end":89}},{"value":"/ If the returned amount is 0 or greater than the amount of buffered data, no flush is","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64137,"byte_end":64225,"line_start":150,"line_end":150,"column_start":5,"column_end":93}},{"value":"/ performed.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64230,"byte_end":64244,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64249,"byte_end":64252,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The buffer is provided, as well as `incoming` which is","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64257,"byte_end":64315,"line_start":153,"line_end":153,"column_start":5,"column_end":63}},{"value":"/ the size of the buffer that will be written to the `BufWriter`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64320,"byte_end":64387,"line_start":154,"line_end":154,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64392,"byte_end":64395,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ By default, flushes the buffer if the usable space is smaller than the incoming write.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64400,"byte_end":64490,"line_start":156,"line_end":156,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64847,"byte_end":64858,"line_start":166,"line_end":166,"column_start":8,"column_end":19},"name":"after_write","qualname":"::policy::WriterPolicy::after_write","value":"pub fn after_write(&mut Self, &Buffer) -> FlushAmt","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Return `true` if the buffer should be flushed after reading into it.","sig":null,"attributes":[{"value":"/ Return `true` if the buffer should be flushed after reading into it.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64658,"byte_end":64730,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64735,"byte_end":64738,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ `buf` references the updated buffer after the read.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64743,"byte_end":64798,"line_start":163,"line_end":163,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64803,"byte_end":64806,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Default impl is a no-op.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":64811,"byte_end":64839,"line_start":165,"line_end":165,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65229,"byte_end":65241,"line_start":177,"line_end":177,"column_start":12,"column_end":24},"name":"FlushAtLeast","qualname":"::policy::FlushAtLeast","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flush the buffer if it contains at least the given number of bytes.\n","sig":null,"attributes":[{"value":"/ Flush the buffer if it contains at least the given number of bytes.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65120,"byte_end":65191,"line_start":175,"line_end":175,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":376},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65242,"byte_end":65251,"line_start":177,"line_end":177,"column_start":25,"column_end":34},"name":"0","qualname":"::policy::FlushAtLeast::0","value":"usize","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65732,"byte_end":65742,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"FlushExact","qualname":"::policy::FlushExact","value":"","parent":null,"children":[],"decl_id":null,"docs":" Only ever flush exactly the given number of bytes, until the writer is empty.\n","sig":null,"attributes":[{"value":"/ Only ever flush exactly the given number of bytes, until the writer is empty.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65613,"byte_end":65694,"line_start":190,"line_end":190,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":383},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65743,"byte_end":65752,"line_start":192,"line_end":192,"column_start":23,"column_end":32},"name":"0","qualname":"::policy::FlushExact::0","value":"usize","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66744,"byte_end":66751,"line_start":221,"line_end":221,"column_start":12,"column_end":19},"name":"FlushOn","qualname":"::policy::FlushOn","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flush the buffer if it contains the given byte.","sig":null,"attributes":[{"value":"/ Flush the buffer if it contains the given byte.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66581,"byte_end":66632,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66633,"byte_end":66636,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Only scans the buffer after reading. Searches from the end first.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66637,"byte_end":66706,"line_start":219,"line_end":219,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":390},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66752,"byte_end":66758,"line_start":221,"line_end":221,"column_start":20,"column_end":26},"name":"0","qualname":"::policy::FlushOn::0","value":"u8","parent":{"krate":0,"index":388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":395},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":67114,"byte_end":67128,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"FlushOnNewline","qualname":"::policy::FlushOnNewline","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flush the buffer if it contains a newline (`\\n`).","sig":null,"attributes":[{"value":"/ Flush the buffer if it contains a newline (`\\n`).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66983,"byte_end":67036,"line_start":230,"line_end":230,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":67037,"byte_end":67040,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `FlushOn(b'\\n')`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":67041,"byte_end":67076,"line_start":232,"line_end":232,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9590,"byte_end":9599,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" A drop-in replacement for `std::io::BufReader` with more functionality.","sig":null,"attributes":[{"value":"/ A drop-in replacement for `std::io::BufReader` with more functionality.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8350,"byte_end":8425,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8426,"byte_end":8429,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ Original method names/signatures and implemented traits are left untouched,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8430,"byte_end":8509,"line_start":180,"line_end":180,"column_start":1,"column_end":80}},{"value":"/ making replacement as simple as swapping the import of the type.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8510,"byte_end":8578,"line_start":181,"line_end":181,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8579,"byte_end":8582,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ By default this type implements the behavior of its `std` counterpart: it only reads into","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8583,"byte_end":8676,"line_start":183,"line_end":183,"column_start":1,"column_end":94}},{"value":"/ the buffer when it is empty.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8677,"byte_end":8709,"line_start":184,"line_end":184,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8710,"byte_end":8713,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ To change this type's behavior, change the policy with [`.set_policy()`] using a type","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8714,"byte_end":8803,"line_start":186,"line_end":186,"column_start":1,"column_end":90}},{"value":"/ from the [`policy` module] or your own implementation of [`ReaderPolicy`].","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8804,"byte_end":8882,"line_start":187,"line_end":187,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8883,"byte_end":8886,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ Policies that perform alternating reads and consumes without completely emptying the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8887,"byte_end":8982,"line_start":189,"line_end":189,"column_start":1,"column_end":96}},{"value":"/ may benefit from using a ringbuffer via the [`new_ringbuf()`] and [`with_capacity_ringbuf()`]","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8983,"byte_end":9080,"line_start":190,"line_end":190,"column_start":1,"column_end":98}},{"value":"/ constructors. Ringbuffers are only available on supported platforms with the","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9081,"byte_end":9161,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/ `slice-deque` feature and have some other caveats; see [the crate root docs][ringbufs-root]","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9162,"byte_end":9257,"line_start":192,"line_end":192,"column_start":1,"column_end":96}},{"value":"/ for more details.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9258,"byte_end":9279,"line_start":193,"line_end":193,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9280,"byte_end":9283,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [`.set_policy()`]: BufReader::set_policy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9284,"byte_end":9328,"line_start":195,"line_end":195,"column_start":1,"column_end":45}},{"value":"/ [`policy` module]: policy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9329,"byte_end":9358,"line_start":196,"line_end":196,"column_start":1,"column_end":30}},{"value":"/ [`ReaderPolicy`]: policy::ReaderPolicy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9359,"byte_end":9401,"line_start":197,"line_end":197,"column_start":1,"column_end":43}},{"value":"/ [`new_ringbuf()`]: BufReader::new_ringbuf","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9402,"byte_end":9447,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ [`with_capacity_ringbuf()`]: BufReader::with_capacity_ringbuf","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9448,"byte_end":9513,"line_start":199,"line_end":199,"column_start":1,"column_end":66}},{"value":"/ [ringbufs-root]: index.html#ringbuffers--slice-deque-feature","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9514,"byte_end":9578,"line_start":200,"line_end":200,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9917,"byte_end":9920,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R, StdPolicy>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufReader` wrapping `inner`, utilizing a buffer of\n default capacity and the default [`ReaderPolicy`](policy::ReaderPolicy).\n","sig":null,"attributes":[{"value":"/ Create a new `BufReader` wrapping `inner`, utilizing a buffer of","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9756,"byte_end":9824,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/ default capacity and the default [`ReaderPolicy`](policy::ReaderPolicy).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9829,"byte_end":9905,"line_start":210,"line_end":210,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":10312,"byte_end":10325,"line_start":220,"line_end":220,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R, StdPolicy>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufReader` wrapping `inner`, utilizing a buffer with a capacity\n of *at least* `cap` bytes and the default [`ReaderPolicy`](policy::ReaderPolicy).","sig":null,"attributes":[{"value":"/ Create a new `BufReader` wrapping `inner`, utilizing a buffer with a capacity","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":10005,"byte_end":10086,"line_start":215,"line_end":215,"column_start":5,"column_end":86}},{"value":"/ of *at least* `cap` bytes and the default [`ReaderPolicy`](policy::ReaderPolicy).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":10091,"byte_end":10176,"line_start":216,"line_end":216,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":10181,"byte_end":10184,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The actual capacity of the buffer may vary based on implementation details of the global","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":10189,"byte_end":10281,"line_start":218,"line_end":218,"column_start":5,"column_end":97}},{"value":"/ allocator.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":10286,"byte_end":10300,"line_start":219,"line_end":219,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12784,"byte_end":12795,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"with_buffer","qualname":"<BufReader<R, StdPolicy>>::with_buffer","value":"pub fn with_buffer(Buffer, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap `inner` with an existing `Buffer` instance and the default `ReaderPolicy`.","sig":null,"attributes":[{"value":"/ Wrap `inner` with an existing `Buffer` instance and the default `ReaderPolicy`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12486,"byte_end":12569,"line_start":258,"line_end":258,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12574,"byte_end":12577,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12582,"byte_end":12594,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/ Does **not** clear the buffer first! If there is data already in the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12599,"byte_end":12678,"line_start":261,"line_end":261,"column_start":5,"column_end":84}},{"value":"/ then it will be returned in `read()` and `fill_buf()` ahead of any data from `inner`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12683,"byte_end":12772,"line_start":262,"line_end":262,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13038,"byte_end":13048,"line_start":272,"line_end":272,"column_start":12,"column_end":22},"name":"set_policy","qualname":"<BufReader<R, P>>::set_policy","value":"pub fn set_policy<P_: ReaderPolicy>(Self, P_) -> BufReader<R, P_>","parent":null,"children":[],"decl_id":null,"docs":" Apply a new `ReaderPolicy` to this `BufReader`, returning the transformed type.\n","sig":null,"attributes":[{"value":"/ Apply a new `ReaderPolicy` to this `BufReader`, returning the transformed type.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12943,"byte_end":13026,"line_start":271,"line_end":271,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13377,"byte_end":13387,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"policy_mut","qualname":"<BufReader<R, P>>::policy_mut","value":"pub fn policy_mut(&mut Self) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Mutate the current [`ReaderPolicy`](policy::ReaderPolicy) in-place.","sig":null,"attributes":[{"value":"/ Mutate the current [`ReaderPolicy`](policy::ReaderPolicy) in-place.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13225,"byte_end":13296,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13301,"byte_end":13304,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If you want to change the type, use `.set_policy()`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13309,"byte_end":13365,"line_start":282,"line_end":282,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13486,"byte_end":13492,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"policy","qualname":"<BufReader<R, P>>::policy","value":"pub fn policy(&Self) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Inspect the current `ReaderPolicy`.\n","sig":null,"attributes":[{"value":"/ Inspect the current `ReaderPolicy`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13435,"byte_end":13474,"line_start":285,"line_end":285,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13745,"byte_end":13754,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"make_room","qualname":"<BufReader<R, P>>::make_room","value":"pub fn make_room(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move data to the start of the buffer, making room at the end for more \n reading.","sig":null,"attributes":[{"value":"/ Move data to the start of the buffer, making room at the end for more ","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13540,"byte_end":13614,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ reading.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13619,"byte_end":13631,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13636,"byte_end":13639,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This is a no-op with the `*_ringbuf()` constructors (requires `slice-deque` feature).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13644,"byte_end":13733,"line_start":293,"line_end":293,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13973,"byte_end":13980,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BufReader<R, P>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensure room in the buffer for *at least* `additional` bytes. May not be\n quite exact due to implementation details of the buffer's allocator.\n","sig":null,"attributes":[{"value":"/ Ensure room in the buffer for *at least* `additional` bytes. May not be","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13809,"byte_end":13884,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ quite exact due to implementation details of the buffer's allocator.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":13889,"byte_end":13961,"line_start":299,"line_end":299,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14286,"byte_end":14292,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R, P>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the section of the buffer containing valid data; may be empty.","sig":null,"attributes":[{"value":"/ Get the section of the buffer containing valid data; may be empty.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14118,"byte_end":14188,"line_start":306,"line_end":306,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14193,"byte_end":14196,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Call `.consume()` to remove bytes from the beginning of this section.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14201,"byte_end":14274,"line_start":308,"line_end":308,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14417,"byte_end":14424,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"buf_len","qualname":"<BufReader<R, P>>::buf_len","value":"pub fn buf_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the current number of bytes available in the buffer.\n","sig":null,"attributes":[{"value":"/ Get the current number of bytes available in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14345,"byte_end":14405,"line_start":313,"line_end":313,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14523,"byte_end":14531,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BufReader<R, P>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the total buffer capacity.\n","sig":null,"attributes":[{"value":"/ Get the total buffer capacity.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14477,"byte_end":14511,"line_start":318,"line_end":318,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14657,"byte_end":14664,"line_start":324,"line_end":324,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R, P>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Get an immutable reference to the underlying reader.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14589,"byte_end":14645,"line_start":323,"line_end":323,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14928,"byte_end":14935,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R, P>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the underlying reader.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14699,"byte_end":14752,"line_start":326,"line_end":326,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14757,"byte_end":14760,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14765,"byte_end":14776,"line_start":328,"line_end":328,"column_start":5,"column_end":16}},{"value":"/ Reading directly from the underlying reader is not recommended, as some","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14781,"byte_end":14856,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ data has likely already been moved into the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14861,"byte_end":14916,"line_start":330,"line_end":330,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15046,"byte_end":15056,"line_start":334,"line_end":334,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R, P>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consume `self` and return the inner reader only.\n","sig":null,"attributes":[{"value":"/ Consume `self` and return the inner reader only.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":14982,"byte_end":15034,"line_start":333,"line_end":333,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15234,"byte_end":15256,"line_start":341,"line_end":341,"column_start":12,"column_end":34},"name":"into_inner_with_buffer","qualname":"<BufReader<R, P>>::into_inner_with_buffer","value":"pub fn into_inner_with_buffer(Self) -> (R, Buffer)","parent":null,"children":[],"decl_id":null,"docs":" Consume `self` and return both the underlying reader and the buffer.","sig":null,"attributes":[{"value":"/ Consume `self` and return both the underlying reader and the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15100,"byte_end":15172,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15177,"byte_end":15180,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ See also: `BufReader::unbuffer()`","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15185,"byte_end":15222,"line_start":340,"line_end":340,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15484,"byte_end":15492,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"unbuffer","qualname":"<BufReader<R, P>>::unbuffer","value":"pub fn unbuffer(Self) -> Unbuffer<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume `self` and return an adapter which implements `Read` and will\n empty the buffer before reading directly from the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consume `self` and return an adapter which implements `Read` and will","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15322,"byte_end":15395,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ empty the buffer before reading directly from the underlying reader.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15400,"byte_end":15472,"line_start":346,"line_end":346,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":16010,"byte_end":16023,"line_start":368,"line_end":368,"column_start":12,"column_end":25},"name":"read_into_buf","qualname":"<BufReader<R, P>>::read_into_buf","value":"pub fn read_into_buf(&mut Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Unconditionally perform a read into the buffer.","sig":null,"attributes":[{"value":"/ Unconditionally perform a read into the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15812,"byte_end":15863,"line_start":363,"line_end":363,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15868,"byte_end":15871,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Does not invoke `ReaderPolicy` methods.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15876,"byte_end":15919,"line_start":365,"line_end":365,"column_start":5,"column_end":48}},{"value":"/ ","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15924,"byte_end":15928,"line_start":366,"line_end":366,"column_start":5,"column_end":9}},{"value":"/ If the read was successful, returns the number of bytes read.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15933,"byte_end":15998,"line_start":367,"line_end":367,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":16170,"byte_end":16175,"line_start":373,"line_end":373,"column_start":12,"column_end":17},"name":"boxed","qualname":"<BufReader<R, P>>::boxed","value":"pub fn boxed<'a>(Self) -> BufReader<Box<Read + 'a>, P> where R: 'a","parent":null,"children":[],"decl_id":null,"docs":" Box the inner reader without losing data.\n","sig":null,"attributes":[{"value":"/ Box the inner reader without losing data.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":16113,"byte_end":16158,"line_start":372,"line_end":372,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21496,"byte_end":21505,"line_start":497,"line_end":497,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" A drop-in replacement for `std::io::BufWriter` with more functionality.","sig":null,"attributes":[{"value":"/ A drop-in replacement for `std::io::BufWriter` with more functionality.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20221,"byte_end":20296,"line_start":474,"line_end":474,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20297,"byte_end":20300,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ Original method names/signatures and implemented traits are left untouched,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20301,"byte_end":20380,"line_start":476,"line_end":476,"column_start":1,"column_end":80}},{"value":"/ making replacement as simple as swapping the import of the type.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20381,"byte_end":20449,"line_start":477,"line_end":477,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20450,"byte_end":20453,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ By default this type implements the behavior of its `std` counterpart: it only flushes","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20454,"byte_end":20544,"line_start":479,"line_end":479,"column_start":1,"column_end":91}},{"value":"/ the buffer if an incoming write is larger than the remaining space.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20545,"byte_end":20616,"line_start":480,"line_end":480,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20617,"byte_end":20620,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ To change this type's behavior, change the policy with [`.set_policy()`] using a type","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20621,"byte_end":20710,"line_start":482,"line_end":482,"column_start":1,"column_end":90}},{"value":"/ from the [`policy` module] or your own implentation of [`WriterPolicy`].","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20711,"byte_end":20787,"line_start":483,"line_end":483,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20788,"byte_end":20791,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ Policies that perform alternating writes and flushes without completely emptying the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20792,"byte_end":20887,"line_start":485,"line_end":485,"column_start":1,"column_end":96}},{"value":"/ may benefit from using a ringbuffer via the [`new_ringbuf()`] and [`with_capacity_ringbuf()`]","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20888,"byte_end":20985,"line_start":486,"line_end":486,"column_start":1,"column_end":98}},{"value":"/ constructors. Ringbuffers are only available on supported platforms with the","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":20986,"byte_end":21066,"line_start":487,"line_end":487,"column_start":1,"column_end":81}},{"value":"/ `slice-deque` feature and have some caveats; see [the docs at the crate root][ringbufs-root]","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21067,"byte_end":21163,"line_start":488,"line_end":488,"column_start":1,"column_end":97}},{"value":"/ for more details.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21164,"byte_end":21185,"line_start":489,"line_end":489,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21186,"byte_end":21189,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ [`.set_policy()`]: BufWriter::set_policy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21190,"byte_end":21234,"line_start":491,"line_end":491,"column_start":1,"column_end":45}},{"value":"/ [`policy` module]: policy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21235,"byte_end":21264,"line_start":492,"line_end":492,"column_start":1,"column_end":30}},{"value":"/ [`WriterPolicy`]: policy::WriterPolicy","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21265,"byte_end":21307,"line_start":493,"line_end":493,"column_start":1,"column_end":43}},{"value":"/ [`new_ringbuf()`]: BufWriter::new_ringbuf","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21308,"byte_end":21353,"line_start":494,"line_end":494,"column_start":1,"column_end":46}},{"value":"/ [`with_capacity_ringbuf()`]: BufWriter::with_capacity_ringbuf","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21354,"byte_end":21419,"line_start":495,"line_end":495,"column_start":1,"column_end":66}},{"value":"/ [ringbufs-root]: index.html#ringbuffers--slice-deque-feature","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21420,"byte_end":21484,"line_start":496,"line_end":496,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21778,"byte_end":21781,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufWriter` wrapping `inner` with the default buffer capacity and\n [`WriterPolicy`](policy::WriterPolicy).\n","sig":null,"attributes":[{"value":"/ Create a new `BufWriter` wrapping `inner` with the default buffer capacity and","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21636,"byte_end":21718,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/ [`WriterPolicy`](policy::WriterPolicy).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21723,"byte_end":21766,"line_start":506,"line_end":506,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":22168,"byte_end":22181,"line_start":516,"line_end":516,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufWriter` wrapping `inner`, utilizing a buffer with a capacity\n of *at least* `cap` bytes and the default [`WriterPolicy`](policy::WriterPolicy).","sig":null,"attributes":[{"value":"/ Create a new `BufWriter` wrapping `inner`, utilizing a buffer with a capacity","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21861,"byte_end":21942,"line_start":511,"line_end":511,"column_start":5,"column_end":86}},{"value":"/ of *at least* `cap` bytes and the default [`WriterPolicy`](policy::WriterPolicy).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21947,"byte_end":22032,"line_start":512,"line_end":512,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":22037,"byte_end":22040,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The actual capacity of the buffer may vary based on implementation details of the global","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":22045,"byte_end":22137,"line_start":514,"line_end":514,"column_start":5,"column_end":97}},{"value":"/ allocator.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":22142,"byte_end":22156,"line_start":515,"line_end":515,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24676,"byte_end":24687,"line_start":560,"line_end":560,"column_start":12,"column_end":23},"name":"with_buffer","qualname":"<BufWriter<W>>::with_buffer","value":"pub fn with_buffer(Buffer, W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufWriter` wrapping `inner`, utilizing the existing [`Buffer`](Buffer)\n instance and the default [`WriterPolicy`](policy::WriterPolicy).","sig":null,"attributes":[{"value":"/ Create a new `BufWriter` wrapping `inner`, utilizing the existing [`Buffer`](Buffer)","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24344,"byte_end":24432,"line_start":554,"line_end":554,"column_start":5,"column_end":93}},{"value":"/ instance and the default [`WriterPolicy`](policy::WriterPolicy).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24437,"byte_end":24505,"line_start":555,"line_end":555,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24510,"byte_end":24513,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24518,"byte_end":24530,"line_start":557,"line_end":557,"column_start":5,"column_end":17}},{"value":"/ Does **not** clear the buffer first! If there is data already in the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24535,"byte_end":24614,"line_start":558,"line_end":558,"column_start":5,"column_end":84}},{"value":"/ it will be written out on the next flush!","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24619,"byte_end":24664,"line_start":559,"line_end":559,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24965,"byte_end":24975,"line_start":569,"line_end":569,"column_start":12,"column_end":22},"name":"set_policy","qualname":"<BufWriter<W, P>>::set_policy","value":"pub fn set_policy<P_: WriterPolicy>(Self, P_) -> BufWriter<W, P_>","parent":null,"children":[],"decl_id":null,"docs":" Set a new [`WriterPolicy`](policy::WriterPolicy), returning the transformed type.\n","sig":null,"attributes":[{"value":"/ Set a new [`WriterPolicy`](policy::WriterPolicy), returning the transformed type.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24868,"byte_end":24953,"line_start":568,"line_end":568,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25276,"byte_end":25286,"line_start":579,"line_end":579,"column_start":12,"column_end":22},"name":"policy_mut","qualname":"<BufWriter<W, P>>::policy_mut","value":"pub fn policy_mut(&mut Self) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Mutate the current [`WriterPolicy`](policy::WriterPolicy).\n","sig":null,"attributes":[{"value":"/ Mutate the current [`WriterPolicy`](policy::WriterPolicy).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25202,"byte_end":25264,"line_start":578,"line_end":578,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25397,"byte_end":25403,"line_start":584,"line_end":584,"column_start":12,"column_end":18},"name":"policy","qualname":"<BufWriter<W, P>>::policy","value":"pub fn policy(&Self) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Inspect the current `WriterPolicy`.\n","sig":null,"attributes":[{"value":"/ Inspect the current `WriterPolicy`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25346,"byte_end":25385,"line_start":583,"line_end":583,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25503,"byte_end":25510,"line_start":589,"line_end":589,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W, P>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner writer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25451,"byte_end":25491,"line_start":588,"line_end":588,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25760,"byte_end":25767,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W, P>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner writer.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner writer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25557,"byte_end":25605,"line_start":593,"line_end":593,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25610,"byte_end":25613,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25618,"byte_end":25630,"line_start":595,"line_end":595,"column_start":5,"column_end":17}},{"value":"/ If the buffer has not been flushed, writing directly to the inner type will cause","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25635,"byte_end":25720,"line_start":596,"line_end":596,"column_start":5,"column_end":90}},{"value":"/ data inconsistency.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25725,"byte_end":25748,"line_start":597,"line_end":597,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25878,"byte_end":25886,"line_start":603,"line_end":603,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BufWriter<W, P>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacty of the inner buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacty of the inner buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25826,"byte_end":25866,"line_start":602,"line_end":602,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26008,"byte_end":26015,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"buf_len","qualname":"<BufWriter<W, P>>::buf_len","value":"pub fn buf_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of bytes currently in the buffer.\n","sig":null,"attributes":[{"value":"/ Get the number of bytes currently in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":25944,"byte_end":25996,"line_start":607,"line_end":607,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26232,"byte_end":26239,"line_start":614,"line_end":614,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BufWriter<W, P>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve space in the buffer for at least `additional` bytes. May not be\n quite exact due to implementation details of the buffer's allocator.\n","sig":null,"attributes":[{"value":"/ Reserve space in the buffer for at least `additional` bytes. May not be","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26068,"byte_end":26143,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ quite exact due to implementation details of the buffer's allocator.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26148,"byte_end":26220,"line_start":613,"line_end":613,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26525,"byte_end":26534,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"make_room","qualname":"<BufWriter<W, P>>::make_room","value":"pub fn make_room(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move data to the start of the buffer, making room at the end for more\n writing.","sig":null,"attributes":[{"value":"/ Move data to the start of the buffer, making room at the end for more","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26321,"byte_end":26394,"line_start":618,"line_end":618,"column_start":5,"column_end":78}},{"value":"/ writing.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26399,"byte_end":26411,"line_start":619,"line_end":619,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26416,"byte_end":26419,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is a no-op with the `*_ringbuf()` constructors (requires `slice-deque` feature).","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26424,"byte_end":26513,"line_start":621,"line_end":621,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26672,"byte_end":26694,"line_start":627,"line_end":627,"column_start":12,"column_end":34},"name":"into_inner_with_buffer","qualname":"<BufWriter<W, P>>::into_inner_with_buffer","value":"pub fn into_inner_with_buffer(Self) -> (W, Buffer)","parent":null,"children":[],"decl_id":null,"docs":" Consume `self` and return both the underlying writer and the buffer\n","sig":null,"attributes":[{"value":"/ Consume `self` and return both the underlying writer and the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":26589,"byte_end":26660,"line_start":626,"line_end":626,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27568,"byte_end":27578,"line_start":655,"line_end":655,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W, P>>::into_inner","value":"pub fn into_inner(Self) -> Result<W, IntoInnerError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Flush the buffer and unwrap, returning the inner writer on success,\n or a type wrapping `self` plus the error otherwise.\n","sig":null,"attributes":[{"value":"/ Flush the buffer and unwrap, returning the inner writer on success,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27425,"byte_end":27496,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/ or a type wrapping `self` plus the error otherwise.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27501,"byte_end":27556,"line_start":654,"line_end":654,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27898,"byte_end":27917,"line_start":664,"line_end":664,"column_start":12,"column_end":31},"name":"into_inner_with_err","qualname":"<BufWriter<W, P>>::into_inner_with_err","value":"pub fn into_inner_with_err(Self) -> (W, Option<io::Error>)","parent":null,"children":[],"decl_id":null,"docs":" Flush the buffer and unwrap, returning the inner writer and\n any error encountered during flushing.\n","sig":null,"attributes":[{"value":"/ Flush the buffer and unwrap, returning the inner writer and","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27776,"byte_end":27839,"line_start":662,"line_end":662,"column_start":5,"column_end":68}},{"value":"/ any error encountered during flushing.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27844,"byte_end":27886,"line_start":663,"line_end":663,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":242},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30522,"byte_end":30532,"line_start":741,"line_end":741,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::LineWriter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A drop-in replacement for `std::io::LineWriter` with more functionality.","sig":null,"attributes":[{"value":"/ A drop-in replacement for `std::io::LineWriter` with more functionality.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30193,"byte_end":30269,"line_start":736,"line_end":736,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30270,"byte_end":30273,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ This is, in fact, only a thin wrapper around","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30274,"byte_end":30322,"line_start":738,"line_end":738,"column_start":1,"column_end":49}},{"value":"/ [`BufWriter`](BufWriter)`<W, `[`policy::FlushOnNewline`](policy::FlushOnNewline)`>`, which","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30323,"byte_end":30417,"line_start":739,"line_end":739,"column_start":1,"column_end":95}},{"value":"/ demonstrates the power of custom [`WriterPolicy`](policy::WriterPolicy) implementations.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30418,"byte_end":30510,"line_start":740,"line_end":740,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30672,"byte_end":30675,"line_start":745,"line_end":745,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap `inner` with the default buffer capacity.\n","sig":null,"attributes":[{"value":"/ Wrap `inner` with the default buffer capacity.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30610,"byte_end":30660,"line_start":744,"line_end":744,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30815,"byte_end":30828,"line_start":750,"line_end":750,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap `inner` with the given buffer capacity.\n","sig":null,"attributes":[{"value":"/ Wrap `inner` with the given buffer capacity.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30755,"byte_end":30803,"line_start":749,"line_end":749,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31621,"byte_end":31632,"line_start":771,"line_end":771,"column_start":12,"column_end":23},"name":"with_buffer","qualname":"<LineWriter<W>>::with_buffer","value":"pub fn with_buffer(Buffer, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Wrap `inner` with an existing `Buffer` instance.","sig":null,"attributes":[{"value":"/ Wrap `inner` with an existing `Buffer` instance.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31398,"byte_end":31450,"line_start":766,"line_end":766,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31455,"byte_end":31458,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31463,"byte_end":31475,"line_start":768,"line_end":768,"column_start":5,"column_end":17}},{"value":"/ Does **not** clear the buffer first! If there is data already in the buffer","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31480,"byte_end":31559,"line_start":769,"line_end":769,"column_start":5,"column_end":84}},{"value":"/ it will be written out on the next flush!","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31564,"byte_end":31609,"line_start":770,"line_end":770,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31820,"byte_end":31827,"line_start":776,"line_end":776,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Get a reference to the inner writer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31768,"byte_end":31808,"line_start":775,"line_end":775,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32082,"byte_end":32089,"line_start":785,"line_end":785,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LineWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the inner writer.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the inner writer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31879,"byte_end":31927,"line_start":780,"line_end":780,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31932,"byte_end":31935,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31940,"byte_end":31952,"line_start":782,"line_end":782,"column_start":5,"column_end":17}},{"value":"/ If the buffer has not been flushed, writing directly to the inner type will cause","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":31957,"byte_end":32042,"line_start":783,"line_end":783,"column_start":5,"column_end":90}},{"value":"/ data inconsistency.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32047,"byte_end":32070,"line_start":784,"line_end":784,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32202,"byte_end":32210,"line_start":790,"line_end":790,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LineWriter<W>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the inner buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the inner buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32149,"byte_end":32190,"line_start":789,"line_end":789,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32330,"byte_end":32337,"line_start":795,"line_end":795,"column_start":12,"column_end":19},"name":"buf_len","qualname":"<LineWriter<W>>::buf_len","value":"pub fn buf_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of bytes currently in the buffer.\n","sig":null,"attributes":[{"value":"/ Get the number of bytes currently in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32266,"byte_end":32318,"line_start":794,"line_end":794,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32564,"byte_end":32571,"line_start":801,"line_end":801,"column_start":12,"column_end":19},"name":"reserve","qualname":"<LineWriter<W>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensure enough space in the buffer for *at least* `additional` bytes. May not be\n quite exact due to implementation details of the buffer's allocator.\n","sig":null,"attributes":[{"value":"/ Ensure enough space in the buffer for *at least* `additional` bytes. May not be","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32392,"byte_end":32475,"line_start":799,"line_end":799,"column_start":5,"column_end":88}},{"value":"/ quite exact due to implementation details of the buffer's allocator.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32480,"byte_end":32552,"line_start":800,"line_end":800,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32794,"byte_end":32804,"line_start":807,"line_end":807,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<LineWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> Result<W, IntoInnerError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Flush the buffer and unwrap, returning the inner writer on success,\n or a type wrapping `self` plus the error otherwise.\n","sig":null,"attributes":[{"value":"/ Flush the buffer and unwrap, returning the inner writer on success,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32651,"byte_end":32722,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ or a type wrapping `self` plus the error otherwise.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32727,"byte_end":32782,"line_start":806,"line_end":806,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33095,"byte_end":33114,"line_start":814,"line_end":814,"column_start":12,"column_end":31},"name":"into_inner_with_err","qualname":"<LineWriter<W>>::into_inner_with_err","value":"pub fn into_inner_with_err(Self) -> (W, Option<io::Error>)","parent":null,"children":[],"decl_id":null,"docs":" Flush the buffer and unwrap, returning the inner writer and\n any error encountered during flushing.\n","sig":null,"attributes":[{"value":"/ Flush the buffer and unwrap, returning the inner writer and","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":32973,"byte_end":33036,"line_start":812,"line_end":812,"column_start":5,"column_end":68}},{"value":"/ any error encountered during flushing.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33041,"byte_end":33083,"line_start":813,"line_end":813,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33281,"byte_end":33300,"line_start":819,"line_end":819,"column_start":12,"column_end":31},"name":"into_inner_with_buf","qualname":"<LineWriter<W>>::into_inner_with_buf","value":"pub fn into_inner_with_buf(Self) -> (W, Buffer)","parent":null,"children":[],"decl_id":null,"docs":" Consume `self` and return both the underlying writer and the buffer.\n","sig":null,"attributes":[{"value":"/ Consume `self` and return both the underlying writer and the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33197,"byte_end":33269,"line_start":818,"line_end":818,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":401},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34015,"byte_end":34029,"line_start":846,"line_end":846,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type for `BufWriter::into_inner()`,\n contains the `BufWriter` as well as the error that occurred.\n","sig":null,"attributes":[{"value":"/ The error type for `BufWriter::into_inner()`,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33872,"byte_end":33921,"line_start":843,"line_end":843,"column_start":1,"column_end":50}},{"value":"/ contains the `BufWriter` as well as the error that occurred.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33922,"byte_end":33986,"line_start":844,"line_end":844,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":404},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34033,"byte_end":34038,"line_start":846,"line_end":846,"column_start":30,"column_end":35},"name":"0","qualname":"::IntoInnerError::0","value":"W","parent":{"krate":0,"index":401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":405},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34040,"byte_end":34053,"line_start":846,"line_end":846,"column_start":37,"column_end":50},"name":"1","qualname":"::IntoInnerError::1","value":"std::io::Error","parent":{"krate":0,"index":401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34118,"byte_end":34123,"line_start":850,"line_end":850,"column_start":12,"column_end":17},"name":"error","qualname":"<IntoInnerError<W>>::error","value":"pub fn error(&Self) -> &io::Error","parent":null,"children":[],"decl_id":null,"docs":" Get the error\n","sig":null,"attributes":[{"value":"/ Get the error","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34089,"byte_end":34106,"line_start":849,"line_end":849,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34206,"byte_end":34216,"line_start":855,"line_end":855,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoInnerError<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Take the writer.\n","sig":null,"attributes":[{"value":"/ Take the writer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34174,"byte_end":34194,"line_start":854,"line_end":854,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34889,"byte_end":34895,"line_start":885,"line_end":885,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" A deque-like datastructure for managing bytes.","sig":null,"attributes":[{"value":"/ A deque-like datastructure for managing bytes.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34739,"byte_end":34789,"line_start":882,"line_end":882,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34790,"byte_end":34793,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ Supports interacting via I/O traits like `Read` and `Write`, and direct access.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34794,"byte_end":34877,"line_start":884,"line_end":884,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":35016,"byte_end":35019,"line_start":892,"line_end":892,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new buffer with a default capacity.\n","sig":null,"attributes":[{"value":"/ Create a new buffer with a default capacity.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34956,"byte_end":35004,"line_start":891,"line_end":891,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":35253,"byte_end":35266,"line_start":899,"line_end":899,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Buffer>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new buffer with *at least* the given capacity.","sig":null,"attributes":[{"value":"/ Create a new buffer with *at least* the given capacity.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":35089,"byte_end":35148,"line_start":896,"line_end":896,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":35153,"byte_end":35156,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ If the global allocator returns extra capacity, `Buffer` will use all of it.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":35161,"byte_end":35241,"line_start":898,"line_end":898,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":37704,"byte_end":37714,"line_start":952,"line_end":952,"column_start":12,"column_end":22},"name":"is_ringbuf","qualname":"<Buffer>::is_ringbuf","value":"pub fn is_ringbuf(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if this is a ringbuffer.\n","sig":null,"attributes":[{"value":"/ Return `true` if this is a ringbuffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":37650,"byte_end":37692,"line_start":951,"line_end":951,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":37891,"byte_end":37894,"line_start":959,"line_end":959,"column_start":12,"column_end":15},"name":"len","qualname":"<Buffer>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of bytes currently in this buffer.","sig":null,"attributes":[{"value":"/ Return the number of bytes currently in this buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":37773,"byte_end":37829,"line_start":956,"line_end":956,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":37834,"byte_end":37837,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `self.buf().len()`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":37842,"byte_end":37879,"line_start":958,"line_end":958,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38288,"byte_end":38300,"line_start":968,"line_end":968,"column_start":12,"column_end":24},"name":"usable_space","qualname":"<Buffer>::usable_space","value":"pub fn usable_space(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of bytes that can be read into this buffer before it needs\n to grow or the data in the buffer needs to be moved.","sig":null,"attributes":[{"value":"/ Return the number of bytes that can be read into this buffer before it needs","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":37947,"byte_end":38027,"line_start":963,"line_end":963,"column_start":5,"column_end":85}},{"value":"/ to grow or the data in the buffer needs to be moved.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38032,"byte_end":38088,"line_start":964,"line_end":964,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38093,"byte_end":38096,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ This may not constitute all free space in the buffer if bytes have been consumed","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38101,"byte_end":38185,"line_start":966,"line_end":966,"column_start":5,"column_end":89}},{"value":"/ from the head. Use `free_space()` to determine the total free space in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38190,"byte_end":38276,"line_start":967,"line_end":967,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38650,"byte_end":38660,"line_start":977,"line_end":977,"column_start":12,"column_end":22},"name":"free_space","qualname":"<Buffer>::free_space","value":"pub fn free_space(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total amount of free space in the buffer, including bytes\n already consumed from the head.","sig":null,"attributes":[{"value":"/ Returns the total amount of free space in the buffer, including bytes","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38362,"byte_end":38435,"line_start":972,"line_end":972,"column_start":5,"column_end":78}},{"value":"/ already consumed from the head.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38440,"byte_end":38475,"line_start":973,"line_end":973,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38480,"byte_end":38483,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This will be greater than or equal to `usable_space()`. On supported platforms","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38488,"byte_end":38570,"line_start":975,"line_end":975,"column_start":5,"column_end":87}},{"value":"/ with the `slice-deque` feature enabled, it should be equal.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38575,"byte_end":38638,"line_start":976,"line_end":976,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38784,"byte_end":38792,"line_start":982,"line_end":982,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Buffer>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the total capacity of this buffer.\n","sig":null,"attributes":[{"value":"/ Return the total capacity of this buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38727,"byte_end":38772,"line_start":981,"line_end":981,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38934,"byte_end":38942,"line_start":987,"line_end":987,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Buffer>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no bytes in the buffer, false otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there are no bytes in the buffer, false otherwise.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38850,"byte_end":38922,"line_start":986,"line_end":986,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39161,"byte_end":39170,"line_start":994,"line_end":994,"column_start":12,"column_end":21},"name":"make_room","qualname":"<Buffer>::make_room","value":"pub fn make_room(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move bytes down in the buffer to maximize usable space.","sig":null,"attributes":[{"value":"/ Move bytes down in the buffer to maximize usable space.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":38995,"byte_end":39054,"line_start":991,"line_end":991,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39059,"byte_end":39062,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This is a no-op on supported platforms with the `slice-deque` feature enabled.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39067,"byte_end":39149,"line_start":993,"line_end":993,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39791,"byte_end":39798,"line_start":1008,"line_end":1008,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Buffer>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Ensure space for at least `additional` more bytes in the buffer.","sig":null,"attributes":[{"value":"/ Ensure space for at least `additional` more bytes in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39225,"byte_end":39293,"line_start":998,"line_end":998,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39298,"byte_end":39301,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ This is a no-op if `usable_space() >= additional`. Note that this will reallocate","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39306,"byte_end":39391,"line_start":1000,"line_end":1000,"column_start":5,"column_end":90}},{"value":"/ even if there is enough free space at the head of the buffer for `additional` bytes,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39396,"byte_end":39484,"line_start":1001,"line_end":1001,"column_start":5,"column_end":93}},{"value":"/ because that free space is not at the tail where it can be read into.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39489,"byte_end":39562,"line_start":1002,"line_end":1002,"column_start":5,"column_end":78}},{"value":"/ If you prefer copying data down in the buffer before attempting to reallocate you may wish","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39567,"byte_end":39661,"line_start":1003,"line_end":1003,"column_start":5,"column_end":99}},{"value":"/ to call `.make_room()` first.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39666,"byte_end":39699,"line_start":1004,"line_end":1004,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39704,"byte_end":39707,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ ### Panics","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39712,"byte_end":39726,"line_start":1006,"line_end":1006,"column_start":5,"column_end":19}},{"value":"/ If `self.capacity() + additional` overflows.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":39731,"byte_end":39779,"line_start":1007,"line_end":1007,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40167,"byte_end":40170,"line_start":1018,"line_end":1018,"column_start":12,"column_end":15},"name":"buf","qualname":"<Buffer>::buf","value":"pub fn buf(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get an immutable slice of the available bytes in this buffer.","sig":null,"attributes":[{"value":"/ Get an immutable slice of the available bytes in this buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40006,"byte_end":40071,"line_start":1015,"line_end":1015,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40076,"byte_end":40079,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Call `.consume()` to remove bytes from the beginning of this slice.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40084,"byte_end":40155,"line_start":1017,"line_end":1017,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40379,"byte_end":40386,"line_start":1023,"line_end":1023,"column_start":12,"column_end":19},"name":"buf_mut","qualname":"<Buffer>::buf_mut","value":"pub fn buf_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable slice representing the available bytes in this buffer.","sig":null,"attributes":[{"value":"/ Get a mutable slice representing the available bytes in this buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40211,"byte_end":40283,"line_start":1020,"line_end":1020,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40288,"byte_end":40291,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Call `.consume()` to remove bytes from the beginning of this slice.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40296,"byte_end":40367,"line_start":1022,"line_end":1022,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40906,"byte_end":40915,"line_start":1034,"line_end":1034,"column_start":12,"column_end":21},"name":"read_from","qualname":"<Buffer>::read_from","value":"pub fn read_from<R: Read + ?Sized>(&mut Self, &mut R) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read from `rdr`, returning the number of bytes read or any errors.","sig":null,"attributes":[{"value":"/ Read from `rdr`, returning the number of bytes read or any errors.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40439,"byte_end":40509,"line_start":1025,"line_end":1025,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40514,"byte_end":40517,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ If there is no more room at the head of the buffer, this will return `Ok(0)`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40522,"byte_end":40603,"line_start":1027,"line_end":1027,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40608,"byte_end":40611,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ Uses `Read::initializer()` to initialize the buffer if the `nightly`","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40616,"byte_end":40688,"line_start":1029,"line_end":1029,"column_start":5,"column_end":77}},{"value":"/ feature is enabled, otherwise the buffer is zeroed if it has never been written.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40693,"byte_end":40777,"line_start":1030,"line_end":1030,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40782,"byte_end":40785,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ### Panics","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40790,"byte_end":40804,"line_start":1032,"line_end":1032,"column_start":5,"column_end":19}},{"value":"/ If the returned count from `rdr.read()` overflows the tail cursor of this buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":40809,"byte_end":40894,"line_start":1033,"line_end":1033,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":41836,"byte_end":41851,"line_start":1066,"line_end":1066,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Buffer>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copy from `src` to the tail of this buffer. Returns the number of bytes copied.","sig":null,"attributes":[{"value":"/ Copy from `src` to the tail of this buffer. Returns the number of bytes copied.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":41505,"byte_end":41588,"line_start":1061,"line_end":1061,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":41593,"byte_end":41596,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ This will **not** grow the buffer if `src` is larger than `self.usable_space()`; instead,","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":41601,"byte_end":41694,"line_start":1063,"line_end":1063,"column_start":5,"column_end":98}},{"value":"/ it will fill the usable space and return the number of bytes copied. If there is no usable","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":41699,"byte_end":41793,"line_start":1064,"line_end":1064,"column_start":5,"column_end":99}},{"value":"/ space, this returns 0.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":41798,"byte_end":41824,"line_start":1065,"line_end":1065,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42512,"byte_end":42520,"line_start":1088,"line_end":1088,"column_start":12,"column_end":20},"name":"write_to","qualname":"<Buffer>::write_to","value":"pub fn write_to<W: Write + ?Sized>(&mut Self, &mut W) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write bytes from this buffer to `wrt`. Returns the number of bytes written or any errors.","sig":null,"attributes":[{"value":"/ Write bytes from this buffer to `wrt`. Returns the number of bytes written or any errors.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42188,"byte_end":42281,"line_start":1081,"line_end":1081,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42286,"byte_end":42289,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ If the buffer is empty, returns `Ok(0)`.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42294,"byte_end":42338,"line_start":1083,"line_end":1083,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42343,"byte_end":42346,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ ### Panics","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42351,"byte_end":42365,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/ If the count returned by `wrt.write()` would cause the head cursor to overflow or pass","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42370,"byte_end":42460,"line_start":1086,"line_end":1086,"column_start":5,"column_end":95}},{"value":"/ the tail cursor if added to it.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42465,"byte_end":42500,"line_start":1087,"line_end":1087,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":43111,"byte_end":43120,"line_start":1104,"line_end":1104,"column_start":12,"column_end":21},"name":"write_max","qualname":"<Buffer>::write_max","value":"pub fn write_max<W: Write + ?Sized>(&mut Self, usize, &mut W)\n-> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write, at most, the given number of bytes from this buffer to `wrt`, continuing\n to write and ignoring interrupts until the number is reached or the buffer is empty.","sig":null,"attributes":[{"value":"/ Write, at most, the given number of bytes from this buffer to `wrt`, continuing","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42761,"byte_end":42844,"line_start":1098,"line_end":1098,"column_start":5,"column_end":88}},{"value":"/ to write and ignoring interrupts until the number is reached or the buffer is empty.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42849,"byte_end":42937,"line_start":1099,"line_end":1099,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42942,"byte_end":42945,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ ### Panics","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42950,"byte_end":42964,"line_start":1101,"line_end":1101,"column_start":5,"column_end":19}},{"value":"/ If the count returned by `wrt.write()` would cause the head cursor to overflow or pass","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":42969,"byte_end":43059,"line_start":1102,"line_end":1102,"column_start":5,"column_end":95}},{"value":"/ the tail cursor if added to it.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":43064,"byte_end":43099,"line_start":1103,"line_end":1103,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":44018,"byte_end":44027,"line_start":1127,"line_end":1127,"column_start":12,"column_end":21},"name":"write_all","qualname":"<Buffer>::write_all","value":"pub fn write_all<W: Write + ?Sized>(&mut Self, &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write all bytes in this buffer to `wrt`, ignoring interrupts. Continues writing until\n the buffer is empty or an error is returned.","sig":null,"attributes":[{"value":"/ Write all bytes in this buffer to `wrt`, ignoring interrupts. Continues writing until","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":43797,"byte_end":43886,"line_start":1122,"line_end":1122,"column_start":5,"column_end":94}},{"value":"/ the buffer is empty or an error is returned.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":43891,"byte_end":43939,"line_start":1123,"line_end":1123,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":43944,"byte_end":43947,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ### Panics","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":43952,"byte_end":43966,"line_start":1125,"line_end":1125,"column_start":5,"column_end":19}},{"value":"/ If `self.write_to(wrt)` panics.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":43971,"byte_end":44006,"line_start":1126,"line_end":1126,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":44624,"byte_end":44637,"line_start":1142,"line_end":1142,"column_start":12,"column_end":25},"name":"copy_to_slice","qualname":"<Buffer>::copy_to_slice","value":"pub fn copy_to_slice(&mut Self, &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copy bytes to `out` from this buffer, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Copy bytes to `out` from this buffer, returning the number of bytes written.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":44532,"byte_end":44612,"line_start":1141,"line_end":1141,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45126,"byte_end":45136,"line_start":1160,"line_end":1160,"column_start":12,"column_end":22},"name":"push_bytes","qualname":"<Buffer>::push_bytes","value":"pub fn push_bytes(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Push `bytes` to the end of the buffer, growing it if necessary.","sig":null,"attributes":[{"value":"/ Push `bytes` to the end of the buffer, growing it if necessary.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":44917,"byte_end":44984,"line_start":1156,"line_end":1156,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":44989,"byte_end":44992,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ If you prefer moving bytes down in the buffer to reallocating, you may wish to call","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":44997,"byte_end":45084,"line_start":1158,"line_end":1158,"column_start":5,"column_end":92}},{"value":"/ `.make_room()` first.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45089,"byte_end":45114,"line_start":1159,"line_end":1159,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45499,"byte_end":45506,"line_start":1174,"line_end":1174,"column_start":12,"column_end":19},"name":"consume","qualname":"<Buffer>::consume","value":"pub fn consume(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Consume `amt` bytes from the head of this buffer.\n","sig":null,"attributes":[{"value":"/ Consume `amt` bytes from the head of this buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45434,"byte_end":45487,"line_start":1173,"line_end":1173,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45631,"byte_end":45636,"line_start":1179,"line_end":1179,"column_start":12,"column_end":17},"name":"clear","qualname":"<Buffer>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Empty this buffer by consuming all bytes.\n","sig":null,"attributes":[{"value":"/ Empty this buffer by consuming all bytes.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45574,"byte_end":45619,"line_start":1178,"line_end":1178,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46154,"byte_end":46162,"line_start":1196,"line_end":1196,"column_start":12,"column_end":20},"name":"Unbuffer","qualname":"::Unbuffer","value":"Unbuffer {  }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" A `Read` adapter for a consumed `BufReader` which will empty bytes from the buffer before\n reading from `R` directly. Frees the buffer when it has been emptied.\n","sig":null,"attributes":[{"value":"/ A `Read` adapter for a consumed `BufReader` which will empty bytes from the buffer before","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45975,"byte_end":46068,"line_start":1194,"line_end":1194,"column_start":1,"column_end":94}},{"value":"/ reading from `R` directly. Frees the buffer when it has been emptied.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46069,"byte_end":46142,"line_start":1195,"line_end":1195,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46326,"byte_end":46338,"line_start":1203,"line_end":1203,"column_start":12,"column_end":24},"name":"is_buf_empty","qualname":"<Unbuffer<R>>::is_buf_empty","value":"pub fn is_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer still has some bytes left, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the buffer still has some bytes left, `false` otherwise.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46236,"byte_end":46314,"line_start":1202,"line_end":1202,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46463,"byte_end":46470,"line_start":1208,"line_end":1208,"column_start":12,"column_end":19},"name":"buf_len","qualname":"<Unbuffer<R>>::buf_len","value":"pub fn buf_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes remaining in the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes remaining in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46395,"byte_end":46451,"line_start":1207,"line_end":1207,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46623,"byte_end":46626,"line_start":1213,"line_end":1213,"column_start":12,"column_end":15},"name":"buf","qualname":"<Unbuffer<R>>::buf","value":"pub fn buf(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a slice over the available bytes in the buffer.\n","sig":null,"attributes":[{"value":"/ Get a slice over the available bytes in the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46556,"byte_end":46611,"line_start":1212,"line_end":1212,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46774,"byte_end":46784,"line_start":1218,"line_end":1218,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unbuffer<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying reader, releasing the buffer.\n","sig":null,"attributes":[{"value":"/ Return the underlying reader, releasing the buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46707,"byte_end":46762,"line_start":1217,"line_end":1217,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":47707,"byte_end":47715,"line_start":1252,"line_end":1252,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::copy_buf","value":"pub fn copy_buf<B: BufRead, W: Write>(&mut B, &mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copy data between a `BufRead` and a `Write` without an intermediate buffer.","sig":null,"attributes":[{"value":"/ Copy data between a `BufRead` and a `Write` without an intermediate buffer.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":47466,"byte_end":47545,"line_start":1248,"line_end":1248,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":47546,"byte_end":47549,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ Retries on interrupts. Returns the total bytes copied or the first error;","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":47550,"byte_end":47627,"line_start":1250,"line_end":1250,"column_start":1,"column_end":78}},{"value":"/ even if an error is returned some bytes may still have been copied.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":47628,"byte_end":47699,"line_start":1251,"line_end":1251,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":332},"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48672,"byte_end":48692,"line_start":1285,"line_end":1285,"column_start":8,"column_end":28},"name":"set_drop_err_handler","qualname":"::set_drop_err_handler","value":"pub fn set_drop_err_handler<F: 'static>(F) where\nF: Fn(&mut Write, &mut Buffer, io::Error) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set a thread-local handler for errors thrown in `BufWriter`'s `Drop` impl.","sig":null,"attributes":[{"value":"/ Set a thread-local handler for errors thrown in `BufWriter`'s `Drop` impl.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48330,"byte_end":48408,"line_start":1277,"line_end":1277,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48409,"byte_end":48412,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ The `Write` impl, buffer (at the time of the erroring write) and IO error are provided.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48413,"byte_end":48504,"line_start":1279,"line_end":1279,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48505,"byte_end":48508,"line_start":1280,"line_end":1280,"column_start":1,"column_end":4}},{"value":"/ Replaces the previous handler. By default this is a no-op.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48509,"byte_end":48571,"line_start":1281,"line_end":1281,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48572,"byte_end":48575,"line_start":1282,"line_end":1282,"column_start":1,"column_end":4}},{"value":"/ ### Panics","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48576,"byte_end":48590,"line_start":1283,"line_end":1283,"column_start":1,"column_end":15}},{"value":"/ If called from within a handler previously provided to this function.","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":48591,"byte_end":48664,"line_start":1284,"line_end":1284,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/buffer/std_buf.rs","byte_start":53073,"byte_end":53079,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/buffer/std_buf.rs","byte_start":55644,"byte_end":55650,"line_start":126,"line_end":126,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/buffer/mod.rs","byte_start":51566,"byte_end":51573,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61448,"byte_end":61457,"line_start":70,"line_end":70,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62852,"byte_end":62863,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63024,"byte_end":63035,"line_start":115,"line_end":115,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65106,"byte_end":65115,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65277,"byte_end":65289,"line_start":179,"line_end":179,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65778,"byte_end":65788,"line_start":194,"line_end":194,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66784,"byte_end":66791,"line_start":223,"line_end":223,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":67153,"byte_end":67167,"line_start":236,"line_end":236,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9726,"byte_end":9735,"line_start":208,"line_end":208,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12921,"byte_end":12930,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15643,"byte_end":15652,"line_start":355,"line_end":355,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15790,"byte_end":15799,"line_start":362,"line_end":362,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":16457,"byte_end":16466,"line_start":384,"line_end":384,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":16959,"byte_end":16968,"line_start":398,"line_end":398,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":17695,"byte_end":17704,"line_start":418,"line_end":418,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":18075,"byte_end":18084,"line_start":429,"line_end":429,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21617,"byte_end":21626,"line_start":504,"line_end":504,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24846,"byte_end":24855,"line_start":567,"line_end":567,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27403,"byte_end":27412,"line_start":652,"line_end":652,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":28081,"byte_end":28090,"line_start":670,"line_end":670,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":28902,"byte_end":28911,"line_start":698,"line_end":698,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":29247,"byte_end":29256,"line_start":707,"line_end":707,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":29784,"byte_end":29793,"line_start":722,"line_end":722,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30590,"byte_end":30600,"line_start":743,"line_end":743,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33397,"byte_end":33407,"line_start":824,"line_end":824,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33624,"byte_end":33634,"line_start":834,"line_end":834,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34065,"byte_end":34079,"line_start":848,"line_end":848,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34282,"byte_end":34296,"line_start":860,"line_end":860,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34409,"byte_end":34423,"line_start":866,"line_end":866,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34623,"byte_end":34637,"line_start":876,"line_end":876,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34943,"byte_end":34949,"line_start":890,"line_end":890,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45744,"byte_end":45750,"line_start":1185,"line_end":1185,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46218,"byte_end":46226,"line_start":1201,"line_end":1201,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46849,"byte_end":46857,"line_start":1223,"line_end":1223,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":47230,"byte_end":47238,"line_start":1239,"line_end":1239,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":8222,"byte_end":8228,"line_start":172,"line_end":172,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":90}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/buffer/std_buf.rs","byte_start":53073,"byte_end":53079,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/buffer/std_buf.rs","byte_start":55644,"byte_end":55650,"line_start":126,"line_end":126,"column_start":10,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/buffer/mod.rs","byte_start":51566,"byte_end":51573,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":61448,"byte_end":61457,"line_start":70,"line_end":70,"column_start":23,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":355},"to":{"krate":0,"index":95}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":62852,"byte_end":62863,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":63024,"byte_end":63035,"line_start":115,"line_end":115,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":361},"to":{"krate":0,"index":95}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65106,"byte_end":65115,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":355},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65277,"byte_end":65289,"line_start":179,"line_end":179,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":374},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":65778,"byte_end":65788,"line_start":194,"line_end":194,"column_start":23,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":381},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":66784,"byte_end":66791,"line_start":223,"line_end":223,"column_start":23,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":388},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/policy.rs","byte_start":67153,"byte_end":67167,"line_start":236,"line_end":236,"column_start":23,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":395},"to":{"krate":0,"index":104}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":9726,"byte_end":9735,"line_start":208,"line_end":208,"column_start":9,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":12921,"byte_end":12930,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15643,"byte_end":15652,"line_start":355,"line_end":355,"column_start":26,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":15790,"byte_end":15799,"line_start":362,"line_end":362,"column_start":18,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":16457,"byte_end":16466,"line_start":384,"line_end":384,"column_start":41,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":135},"to":{"krate":1,"index":4246}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":16959,"byte_end":16968,"line_start":398,"line_end":398,"column_start":44,"column_end":53},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":135},"to":{"krate":1,"index":4331}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":17695,"byte_end":17704,"line_start":418,"line_end":418,"column_start":51,"column_end":60},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":18075,"byte_end":18084,"line_start":429,"line_end":429,"column_start":41,"column_end":50},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":135},"to":{"krate":1,"index":4325}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":21617,"byte_end":21626,"line_start":504,"line_end":504,"column_start":16,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":24846,"byte_end":24855,"line_start":567,"line_end":567,"column_start":19,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":27403,"byte_end":27412,"line_start":652,"line_end":652,"column_start":33,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":28081,"byte_end":28090,"line_start":670,"line_end":670,"column_start":43,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":4307}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":28902,"byte_end":28911,"line_start":698,"line_end":698,"column_start":49,"column_end":58},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":4325}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":29247,"byte_end":29256,"line_start":707,"line_end":707,"column_start":59,"column_end":68},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":190},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":29784,"byte_end":29793,"line_start":722,"line_end":722,"column_start":28,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":190},"to":{"krate":2,"index":3050}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":30590,"byte_end":30600,"line_start":743,"line_end":743,"column_start":16,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33397,"byte_end":33407,"line_start":824,"line_end":824,"column_start":26,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":242},"to":{"krate":1,"index":4307}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":33624,"byte_end":33634,"line_start":834,"line_end":834,"column_start":44,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":242},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34065,"byte_end":34079,"line_start":848,"line_end":848,"column_start":9,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34282,"byte_end":34296,"line_start":860,"line_end":860,"column_start":29,"column_end":43},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":2725}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34409,"byte_end":34423,"line_start":866,"line_end":866,"column_start":51,"column_end":65},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":401},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34623,"byte_end":34637,"line_start":876,"line_end":876,"column_start":26,"column_end":40},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":401},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":34943,"byte_end":34949,"line_start":890,"line_end":890,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":45744,"byte_end":45750,"line_start":1185,"line_end":1185,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":8701}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46218,"byte_end":46226,"line_start":1201,"line_end":1201,"column_start":9,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":46849,"byte_end":46857,"line_start":1223,"line_end":1223,"column_start":24,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":312},"to":{"krate":1,"index":4246}},{"span":{"file_name":"/Users/jeziellago/.cargo/registry/src/github.com-1ecc6299db9ec823/buf_redux-0.8.4/src/lib.rs","byte_start":47230,"byte_end":47238,"line_start":1239,"line_end":1239,"column_start":36,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":8701}}]}